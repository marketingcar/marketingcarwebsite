function e(r){var n,t,l="";if("string"==typeof r||"number"==typeof r)l+=r;else if("object"==typeof r)if(Array.isArray(r)){var u=r.length;for(n=0;n<u;n++)r[n]&&(t=e(r[n]))&&(l&&(l+=" "),l+=t)}else for(t in r)r[t]&&(l&&(l+=" "),l+=t);return l}function r(){for(var r,n,t=0,l="",u=arguments.length;t<u;t++)(r=arguments[t])&&(n=e(r))&&(l&&(l+=" "),l+=n);return l}function n(e,r,{checkForDefaultPrevented:n=!0}={}){return function(t){if(e?.(t),!1===n||!t.defaultPrevented)return r?.(t)}}const t=e=>"boolean"==typeof e?`${e}`:0===e?"0":e,l=r,u=(e,r)=>n=>{var u;if(null==(null==r?void 0:r.variants))return l(e,null==n?void 0:n.class,null==n?void 0:n.className);const{variants:a,defaultVariants:o}=r,s=Object.keys(a).map(e=>{const r=null==n?void 0:n[e],l=null==o?void 0:o[e];if(null===r)return null;const u=t(r)||t(l);return a[e][u]}),i=n&&Object.entries(n).reduce((e,r)=>{let[n,t]=r;return void 0===t||(e[n]=t),e},{}),c=null==r||null===(u=r.compoundVariants)||void 0===u?void 0:u.reduce((e,r)=>{let{class:n,className:t,...l}=r;return Object.entries(l).every(e=>{let[r,n]=e;return Array.isArray(n)?n.includes({...o,...i}[r]):{...o,...i}[r]===n})?[...e,n,t]:e},[]);return l(e,s,c,null==n?void 0:n.class,null==n?void 0:n.className)};export{u as a,n as b,r as c};
